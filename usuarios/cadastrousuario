from typing import List
import sqlite3

class DAOexception(Exception):
    pass

class USUdao:
    def verificaLoginUSU(self, usu):
        pass

    def insert(self, usu):
        pass

    def update(self, usu):
        pass

    def delete(self, usu):
        pass

    def findAll(self):
        pass

class Usuarios:
    def __init__(self, id=None, nome=None, email=None, datanascimento=None, cpf=None):
        self.id = id
        self.nome = nome
        self.email = email
        self.datanascimento = datanascimento
        self.cpf = cpf

    def get_id(self):
        return self.id

    def get_nome(self):
        return self.nome

    def get_email(self):
        return self.email

    def get_datanascimento(self):
        return self.datanascimento

    def get_cpf(self):
        return self.cpf

    def set_id(self, id):
        self.id = id

    def set_nome(self, nome):
        self.nome = nome

    def set_email(self, email):
        self.email = email

    def set_datanascimento(self, datanascimento):
        self.datanascimento = datanascimento

    def set_cpf(self, cpf):
        self.cpf = cpf

    def logar_(self, usu):
        try:
            return USUdao().verificaLoginUsu(usu)
        except (sqlite3.DatabaseError, DAOexception) as e:
            raise e

    def cadastrar_usunario(self, usu):
        try:
            return USUdao().insert(usu)
        except (sqlite3.DatabaseError, DAOexception) as e:
            raise e

    def update_usuario(self, usu):
        try:
            return USUdao().update(usu)
        except (sqlite3.DatabaseError, DAOexception) as e:
            raise e

    def excluir_usuario(self, usu):
        try:
            return USUdao().delete(usu)
        except (sqlite3.DatabaseError, DAOexception) as e:
            raise e

    def find_all(self):
        try:
            return USUdao().findAll()
        except (sqlite3.DatabaseError, DAOexception) as e:
            raise e


